<?xml version="1.0" encoding="UTF-8"?>
<scripts>
	<script name="getAllVariables">
		<data>
		<![CDATA[
object var_obj;
string sys_var_id;
Write('<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>\n');
Write("<variablelist>\n");
foreach (sys_var_id, dom.GetObject(ID_SYSTEM_VARIABLES).EnumUsedIDs()) {
  var_obj = dom.GetObject(sys_var_id);
  if (var_obj.Visible() == true) {
    Write("  <variable");
    Write(" name='"); WriteXML(var_obj.Name());
    Write("' value='"); WriteXML(var_obj.Value());
    Write("' valueType='"); WriteXML(var_obj.ValueType());
    if (var_obj.ValueType() == 16) {
      Write("' subType='"); WriteXML(var_obj.ValueSubType());
      Write("' valueList='" # var_obj.ValueList());
    }
    if ((var_obj.ValueType() != 2) && (var_obj.ValueType() != 20)) {
      Write("' min='" # var_obj.ValueMin());
      Write("' max='" # var_obj.ValueMax());
    }
    Write("' writeable='true'");
    Write(" />\n");
  }
}
Write("</variablelist>");
		]]>
		</data>
	</script>
	<script name="setVariable">
		<data>
		<![CDATA[
Write('<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>\n');
Write('<result><valid>')
object var_obj = dom.GetObject("{variable_name}");
if (var_obj) {
  var_obj.State({variable_state});
  Write('true');
}
else {
  Write('false');
}
Write('</valid></result>');
		]]>
		</data>
	</script>
    <script name="setVirtualGroup">
      <data>
      <![CDATA[
Write('<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>\n');
Write('<result><valid>')
object var_obj = dom.GetObject("{group_name}");
if (var_obj) {
  var_obj.State({group_state});
  Write('true');
}
else {
  Write('false');
}
Write('</valid></result>');
      ]]>
      </data>
    </script>

	<script name="getAllDevices">
		<data>
		<![CDATA[
string dev_id;
string channel_id;
string dp_id;
string extraDatapoints = "BOOT\tWORKING\tDIRECTION\tINSTALL_TEST\tPRESS_LONG_RELEASE\t";
extraDatapoints = extraDatapoints # "PRESS_CONT\tHUMIDITYF\tLAST_TICKS\tUNITSPTURN\t";
string extraDatapointName;

Write('<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>\n');
Write("<devices>\n");
foreach (dev_id, root.Devices().EnumUsedIDs()) {
  object dev_obj = dom.GetObject(dev_id);
  string dev_interface= dev_obj.Interface();
  string interface_name = dom.GetObject(dev_interface).Name();
  boolean is_ready = dev_obj.ReadyConfig();
  boolean isChannelFourPartyDevice = (dev_obj.HssType() == "HM-CC-RT-DN") || (dev_obj.HssType() == "HM-CC-RT-DN-BoM");
  boolean isChannelTwoPartyDevice = (dev_obj.HssType() == "HM-TC-IT-WM-W-EU");
  boolean isSmokeDevice = (dev_obj.HssType() == "HM-Sec-SD");

  if(is_ready && 
     (dev_obj.HssType() != "HMW-RCV-50")) {

    Write("  <device");
    Write(" address='"); WriteXML(dev_obj.Address());
    Write("' interface='"); WriteXML(interface_name);
    Write("' type='"); WriteXML(dev_obj.HssType());
    Write("'>\n");
    foreach(channel_id, dev_obj.Channels()) {
      object channel_obj = dom.GetObject(channel_id);
      string channel_number = channel_obj.Address().StrValueByIndex(":",1).ToString();
      boolean isChannelFour = channel_number == "4";
      boolean isChannelTwo = channel_number == "2";
      boolean isChannelOne = channel_number == "1";

      Write("    <channel");
      Write(" number='"); WriteXML(channel_number);
      Write("'>\n");
      
      foreach (extraDatapointName, extraDatapoints) {
        object edp = channel_obj.DPByHssDP(extraDatapointName);
        if (edp) {
          Write("      <datapoint");
          Write(" name='" # extraDatapointName);
          Write("' value='"); 
          if (edp.ValueType() == 2) {
            Write("false");
          }
          else {
            WriteXML(edp.Value());
          }
          Write("' valueType='" # edp.ValueType());
          if (edp.ValueType() == 16) {
            Write("' subType='"); WriteXML(edp.ValueSubType());
            Write("' valueList='" # edp.ValueList());
          }
          if ((edp.ValueType() != 2) && (edp.ValueType() != 20)) {
            Write("' min='" # edp.ValueMin());
            Write("' max='" # edp.ValueMax());
          }
          Write("' writeable='false'");
          Write(" />\n");
        }
      }
      
      foreach(dp_id, channel_obj.DPs().EnumUsedIDs()) {
        object dp_obj = dom.GetObject(dp_id);
        if(dp_obj) {
          string name = dp_obj.Name().StrValueByIndex(".",2);
          if (name != "") {
            Write("      <datapoint");
            Write(" name='"); WriteXML(name);
            Write("' value='"); WriteXML(dp_obj.Value());
            Write("' valueType='" # dp_obj.ValueType());
            if (dp_obj.ValueType() == 16) {
              Write("' subType='"); WriteXML(dp_obj.ValueSubType());
              Write("' valueList='" # dp_obj.ValueList());
            }
            if ((dp_obj.ValueType() != 2) && (dp_obj.ValueType() != 20)) {
              Write("' min='" # dp_obj.ValueMin());
              Write("' max='" # dp_obj.ValueMax());
            }
            Write("' writeable='");
            integer dp_operations = dp_obj.Operations();
            boolean writeable = dp_operations & OPERATION_WRITE;
            if (writeable) {
              Write("true");
            }
            else {
              Write("false");
            }
            Write("' />\n");
          }
        }
      }
      
      if ((isChannelFour && isChannelFourPartyDevice) || (isChannelTwo && isChannelTwoPartyDevice)) {
        Write("      <datapoint name='PARTY_TEMPERATURE' value='5.0' valueType='4' min='5.0' max='30.0' writeable='true' />\n");
        Write("      <datapoint name='PARTY_START_TIME' value='0' valueType='8' min='0' max='1410' writeable='true' />\n");
        Write("      <datapoint name='PARTY_START_DAY' value='1' valueType='8' min='1' max='31' writeable='true' />\n");
        Write("      <datapoint name='PARTY_START_MONTH' value='1' valueType='8' min='1' max='12' writeable='true' />\n");
        Write("      <datapoint name='PARTY_START_YEAR' value='12' valueType='8' min='0' max='99' writeable='true' />\n");
        Write("      <datapoint name='PARTY_STOP_TIME' value='0' valueType='8' min='0' max='1410' writeable='true' />\n");
        Write("      <datapoint name='PARTY_STOP_DAY' value='1' valueType='8' min='1' max='31' writeable='true' />\n");
        Write("      <datapoint name='PARTY_STOP_MONTH' value='1' valueType='8' min='1' max='12' writeable='true' />\n");
        Write("      <datapoint name='PARTY_STOP_YEAR' value='12' valueType='8' min='0' max='99' writeable='true' />\n");
      }
      
      if (isChannelOne && isSmokeDevice) {
        Write("      <datapoint name='STATE' value='false' valueType='2' writeable='false' />\n");
      }

      Write("    </channel>\n");
    }
    Write("  </device>\n");
  }
}
Write("</devices>");
		]]>
		</data>
	</script>

	<script name="executeProgram">
		<data>
		<![CDATA[
Write('<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>\n');
Write('<result><valid>');
object prog = dom.GetObject("{program_name}");
if (prog) {
  Write(prog.ProgramExecute());
}
else {
  Write('false');
}
Write('</valid></result>');
		]]>
		</data>
	</script>
</scripts>